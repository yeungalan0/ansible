---
- name: install and enable chrome repos
  dnf:
    name: google-chrome-stable
    enablerepo: google-chrome

- name: install necessary packages
  package:
    name: [
        "terminator",
        "snapd",
        "dnf-plugins-core",
        "gnome-tweaks",
        "google-chrome-stable",
        "go-task",
        # Packages needed for caps2esc building
        "cmake",
        "yaml-cpp-devel",
        "libevdev-devel",
        "systemd-devel",
        "boost-devel",
        "gcc-c++",
      ]
    state: present
  tags: packages

- name: ensure necessary directories are created
  file:
    path: "{{ item.path }}"
    state: directory
  loop:
    - { path: "/home/{{ my_user }}/.config/terminator" }

- name: create necessary symlinks
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link

- name: install snap packages
  community.general.snap:
    name: "{{ item.name }}"
    classic: "{{ item.classic }}"
  loop:
    - { name: "postman", classic: False }
    - { name: "code", classic: True }
    - { name: "spotify", classic: False }
  tags: snaps

- name: AWS CLI tasks
  block:
    - name: check if AWS CLI is already installed
      stat:
        path: /usr/local/aws-cli
      register: aws_cli

    - name: download latest AWS CLI
      unarchive:
        src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp
        remote_src: yes
      when: not aws_cli.stat.exists

    - name: install the AWS CLI
      command: /tmp/aws/install
      when: not aws_cli.stat.exists
  tags: aws-cli

- name: install and configure docker
  block:
    - name: install the docker repository
      command: sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: install docker packages
      package:
        name: ["docker-ce", "docker-ce-cli", "containerd.io"]
        state: installed

    - name: start and enable docker
      service:
        name: docker
        state: started
        enabled: True

    - name: add user to docker group
      user:
        name: "{{ my_user }}"
        groups: docker
        append: True

    - name: install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: "0755"
  tags: docker

- name: install config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ my_user }}"
    group: "{{ my_user }}"
    mode: 0644
  loop:
    - { src: "bashrc", dest: "/home/{{ my_user }}/.bashrc" }
    - {
        src: "terminator_config",
        dest: "/home/{{ my_user }}/.config/terminator/config",
      }
  tags: configs

- name: install custom sysctl config
  template:
    src: 99-custom.conf.j2
    dest: /etc/sysctl.d/99-custom.conf
    owner: root
    group: root
    mode: 0644
  tags: sysctl
  notify:
    - reload sysctl

- name: Git clone zsh-autosuggestions
  ansible.builtin.git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions"
    dest: "/home/{{ my_user }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  become_user: "{{ my_user }}"
  tags: zsh-autosuggestions

- name: Check if caps2esc is installed
  stat:
    path: "/etc/systemd/system/caps2esc.service"
  register: caps2esc
  tags: always

- name: Configure caps2esc
  block:
    - name: Git clone necessary repos
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest}}"
      become: false
      loop:
        - {
            repo: "https://gitlab.com/interception/linux/tools",
            dest: "/home/{{ my_user }}/git/interception_tools",
          }
        - {
            repo: "https://gitlab.com/interception/linux/plugins/caps2esc",
            dest: "/home/{{ my_user }}/git/caps2esc",
          }

    - name: Run build commands
      ansible.builtin.command:
        cmd: "{{ item.command }}"
        chdir: "{{ item.dir }}"
        creates: "{{ item.creates }}"
      become: false
      loop:
        - {
            command: "cmake -B build -DCMAKE_BUILD_TYPE=Release",
            dir: "/home/{{ my_user }}/git/interception_tools",
            creates: "/home/{{ my_user }}/git/interception_tools/build/udevmon",
          }
        - {
            command: "cmake --build build",
            dir: "/home/{{ my_user }}/git/interception_tools",
            creates: "/home/{{ my_user }}/git/interception_tools/build/udevmon",
          }
        - {
            command: "cmake -B build -DCMAKE_BUILD_TYPE=Release",
            dir: "/home/{{ my_user }}/git/caps2esc",
            creates: "/home/{{ my_user }}/git/caps2esc/build/caps2esc",
          }
        - {
            command: "cmake --build build",
            dir: "/home/{{ my_user }}/git/caps2esc",
            creates: "/home/{{ my_user }}/git/caps2esc/build/caps2esc",
          }

    - name: Copy binaries to desired location
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "0755"
        remote_src: yes
      loop:
        - {
            src: "/home/{{ my_user }}/git/interception_tools/build/udevmon",
            dest: "/usr/local/bin/udevmon",
          }
        - {
            src: "/home/{{ my_user }}/git/interception_tools/build/intercept",
            dest: "/usr/local/bin/intercept",
          }
        - {
            src: "/home/{{ my_user }}/git/interception_tools/build/uinput",
            dest: "/usr/local/bin/uinput",
          }
        - {
            src: "/home/{{ my_user }}/git/caps2esc/build/caps2esc",
            dest: "/usr/local/bin/caps2esc",
          }

    - name: Install config files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "0644"
      loop:
        - { src: "caps2esc.yaml.j2", dest: "/etc/caps2esc.yaml" }
        - {
            src: "caps2esc.service.j2",
            dest: "/etc/systemd/system/caps2esc.service",
          }

    - name: Enable and start caps2esc service
      ansible.builtin.systemd:
        state: started
        enabled: true
        daemon_reload: true
        name: caps2esc
  tags: caps2esc
  when: not caps2esc.stat.exists
